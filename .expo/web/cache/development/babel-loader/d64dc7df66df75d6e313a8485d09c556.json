{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/rknyryn/Desktop/dijidom-mobile-app/components/DetailsModal.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ModalBox from \"react-native-modalbox\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { LineChart } from \"react-native-chart-kit\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { GetAllMeasurementDateByPlantID } from \"../api/Requests\";\n\nvar FontSize = require(\"../assets/styles/fonts/FontSize\");\n\nvar RADIUS = 10;\n\nvar MyLineChart = function MyLineChart(_ref) {\n  var values = _ref.values;\n  return React.createElement(LineChart, {\n    data: {\n      datasets: [{\n        data: values,\n        strokeWidth: 2\n      }]\n    },\n    width: Dimensions.get(\"window\").width - 30,\n    height: Dimensions.get(\"window\").height - 250,\n    chartConfig: {\n      backgroundColor: \"#1cc910\",\n      backgroundGradientFrom: \"#eff3ff\",\n      backgroundGradientTo: \"#efefef\",\n      decimalPlaces: 2,\n      color: function color() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(0, 0, 0, \" + opacity + \")\";\n      },\n      style: {\n        borderRadius: 16\n      }\n    },\n    style: {\n      marginVertical: 8,\n      borderRadius: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default function DetailsModal(_ref2) {\n  var open = _ref2.open,\n      closeModal = _ref2.closeModal,\n      plantID = _ref2.plantID;\n\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      show = _useState4[0],\n      setShow = _useState4[1];\n\n  var datas = [0];\n  console.log(plantID);\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(Platform.OS === \"ios\");\n    setDate(currentDate);\n    GetAllMeasurementDateByPlantID(plantID, currentDate).then(function (result) {\n      result.map(function (m) {\n        datas.push(m.airQuality);\n      });\n    });\n  };\n\n  var showDatepicker = function showDatepicker() {\n    setShow(true);\n  };\n\n  return React.createElement(ModalBox, {\n    isOpen: open,\n    onClosed: closeModal,\n    position: \"bottom\",\n    entry: \"bottom\",\n    style: styles.modal,\n    backButtonClose: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.closeButtonView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.modalButton,\n    onPress: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, React.createElement(AntDesign, {\n    name: \"close\",\n    size: 24,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: styles.modalBodyView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, React.createElement(MyLineChart, {\n    values: datas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Se\\xE7ilen tarihteki 24 saatlik veri\"), React.createElement(Button, {\n    onPress: showDatepicker,\n    title: \"Show date picker!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), show && React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    value: date,\n    mode: \"date\",\n    is24Hour: true,\n    display: \"default\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  modal: {\n    flex: 1,\n    backgroundColor: \"#FFF\"\n  },\n  closeButtonView: {\n    flex: 0.5\n  },\n  modalBodyView: {\n    flex: 9,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  modalButton: {\n    alignSelf: \"flex-end\",\n    margin: \"5%\"\n  }\n});","map":{"version":3,"sources":["/home/rknyryn/Desktop/dijidom-mobile-app/components/DetailsModal.js"],"names":["React","useEffect","useState","ModalBox","AntDesign","LineChart","DateTimePicker","GetAllMeasurementDateByPlantID","FontSize","require","RADIUS","MyLineChart","values","datasets","data","strokeWidth","Dimensions","get","width","height","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","style","borderRadius","marginVertical","DetailsModal","open","closeModal","plantID","Date","date","setDate","show","setShow","datas","console","log","onChange","event","selectedDate","currentDate","Platform","OS","then","result","map","m","push","airQuality","showDatepicker","styles","modal","closeButtonView","modalButton","modalBodyView","StyleSheet","create","flex","alignItems","justifyContent","alignSelf","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Button,\n  Dimensions,\n} from \"react-native\";\nimport ModalBox from \"react-native-modalbox\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { LineChart } from \"react-native-chart-kit\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { GetAllMeasurementDateByPlantID } from \"../api/Requests\";\n\nconst FontSize = require(\"../assets/styles/fonts/FontSize\");\nconst RADIUS = 10;\n\nconst MyLineChart = ({ values }) => {\n  return (\n    <LineChart\n      data={{\n        datasets: [\n          {\n            data: values,\n            strokeWidth: 2,\n          },\n        ],\n      }}\n      width={Dimensions.get(\"window\").width - 30}\n      height={Dimensions.get(\"window\").height - 250}\n      chartConfig={{\n        backgroundColor: \"#1cc910\",\n        backgroundGradientFrom: \"#eff3ff\",\n        backgroundGradientTo: \"#efefef\",\n        decimalPlaces: 2,\n        color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\n        style: {\n          borderRadius: 16,\n        },\n      }}\n      style={{\n        marginVertical: 8,\n        borderRadius: 16,\n      }}\n    />\n  );\n};\n\nexport default function DetailsModal({ open, closeModal, plantID }) {\n  const [date, setDate] = useState(new Date());\n  const [show, setShow] = useState(false);\n  let datas = [0]\n  console.log(plantID);\n\n  const onChange = (event, selectedDate) => {\n    const currentDate = selectedDate || date;\n    setShow(Platform.OS === \"ios\");\n    setDate(currentDate);\n    GetAllMeasurementDateByPlantID(plantID, currentDate).then((result) => {\n      result.map(m => {\n        datas.push(m.airQuality)\n      })\n    });\n  };\n\n  const showDatepicker = () => {\n    setShow(true);\n  };\n\n  return (\n    <ModalBox\n      isOpen={open}\n      onClosed={closeModal}\n      position={\"bottom\"}\n      entry={\"bottom\"}\n      style={styles.modal}\n      backButtonClose={true}\n    >\n      <View style={styles.closeButtonView}>\n        <TouchableOpacity style={styles.modalButton} onPress={closeModal}>\n          <AntDesign name=\"close\" size={24} color=\"black\" />\n        </TouchableOpacity>\n      </View>\n      <View style={styles.modalBodyView}>\n        <MyLineChart values={datas} />\n        <Text>Seçilen tarihteki 24 saatlik veri</Text>\n        <Button onPress={showDatepicker} title=\"Show date picker!\" />\n        {show && (\n          <DateTimePicker\n            testID=\"dateTimePicker\"\n            value={date}\n            mode={\"date\"}\n            is24Hour={true}\n            display=\"default\"\n            onChange={onChange}\n          />\n        )}\n      </View>\n    </ModalBox>\n  );\n}\n\nconst styles = StyleSheet.create({\n  modal: {\n    flex: 1,\n    backgroundColor: \"#FFF\",\n  },\n  closeButtonView: {\n    flex: 0.5,\n  },\n  modalBodyView: {\n    flex: 9,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  modalButton: {\n    alignSelf: \"flex-end\",\n    margin: \"5%\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}