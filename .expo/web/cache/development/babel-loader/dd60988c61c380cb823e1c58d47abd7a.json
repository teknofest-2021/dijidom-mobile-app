{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/rknyryn/Desktop/dijidom-mobile-app/components/DetailsModal.js\";\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ModalBox from \"react-native-modalbox\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { LineChart } from \"react-native-chart-kit\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\n\nvar FontSize = require(\"../assets/styles/fonts/FontSize\");\n\nvar RADIUS = 10;\n\nvar MyLineChart = function MyLineChart() {\n  return React.createElement(LineChart, {\n    data: {\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n      datasets: [{\n        data: [20, 45, 28, 80, 99, 43],\n        strokeWidth: 2\n      }]\n    },\n    width: FontSize.normalizeFont(300),\n    height: FontSize.normalizeFont(350),\n    chartConfig: {\n      backgroundColor: \"#1cc910\",\n      backgroundGradientFrom: \"#eff3ff\",\n      backgroundGradientTo: \"#efefef\",\n      decimalPlaces: 2,\n      color: function color() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(0, 0, 0, \" + opacity + \")\";\n      },\n      style: {\n        borderRadius: 16\n      }\n    },\n    style: {\n      marginVertical: 8,\n      borderRadius: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  });\n};\n\nexport default function DetailsModal(_ref) {\n  var open = _ref.open,\n      closeModal = _ref.closeModal,\n      datas = _ref.datas;\n\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      show = _useState4[0],\n      setShow = _useState4[1];\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(Platform.OS === \"ios\");\n    setDate(currentDate);\n  };\n\n  var showDatepicker = function showDatepicker() {\n    setShow(true);\n  };\n\n  return React.createElement(ModalBox, {\n    isOpen: open,\n    onClosed: closeModal,\n    position: \"bottom\",\n    entry: \"bottom\",\n    style: styles.modal,\n    backButtonClose: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.closeButtonView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.modalButton,\n    onPress: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, React.createElement(AntDesign, {\n    name: \"close\",\n    size: 24,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: styles.modalBodyView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, React.createElement(MyLineChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    onPress: showDatepicker,\n    title: \"Show date picker!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), show && React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    value: date,\n    mode: \"date\",\n    is24Hour: true,\n    display: \"default\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  modal: {\n    flex: 1,\n    backgroundColor: \"#FFF\"\n  },\n  closeButtonView: {\n    flex: .5\n  },\n  modalBodyView: {\n    flex: 9,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  modalButton: {\n    alignSelf: \"flex-end\",\n    marginRight: \"5%\"\n  }\n});","map":{"version":3,"sources":["/home/rknyryn/Desktop/dijidom-mobile-app/components/DetailsModal.js"],"names":["React","useState","ModalBox","AntDesign","LineChart","DateTimePicker","FontSize","require","RADIUS","MyLineChart","labels","datasets","data","strokeWidth","normalizeFont","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","style","borderRadius","marginVertical","DetailsModal","open","closeModal","datas","Date","date","setDate","show","setShow","onChange","event","selectedDate","currentDate","Platform","OS","showDatepicker","styles","modal","closeButtonView","modalButton","modalBodyView","StyleSheet","create","flex","alignItems","justifyContent","alignSelf","marginRight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Button,\n} from \"react-native\";\nimport ModalBox from \"react-native-modalbox\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { LineChart } from \"react-native-chart-kit\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\n\n\nconst FontSize = require(\"../assets/styles/fonts/FontSize\")\nconst RADIUS = 10;\n\nconst MyLineChart = () => {\n  return (\n      <LineChart\n        data={{\n          labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n          datasets: [\n            {\n              data: [20, 45, 28, 80, 99, 43],\n              strokeWidth: 2,\n            },\n          ],\n        }}\n        width={FontSize.normalizeFont(300)}\n        height={FontSize.normalizeFont(350)}\n        chartConfig={{\n          backgroundColor: \"#1cc910\",\n          backgroundGradientFrom: \"#eff3ff\",\n          backgroundGradientTo: \"#efefef\",\n          decimalPlaces: 2,\n          color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\n          style: {\n            borderRadius: 16,\n          },\n        }}\n        style={{\n          marginVertical: 8,\n          borderRadius: 16,\n        }}\n      />\n  );\n};\n\nexport default function DetailsModal({ open, closeModal, datas }) {\n  const [date, setDate] = useState(new Date());\n  const [show, setShow] = useState(false);\n\n  const onChange = (event, selectedDate) => {\n    const currentDate = selectedDate || date;\n    setShow(Platform.OS === \"ios\");\n    setDate(currentDate);\n  };\n\n  const showDatepicker = () => {\n    setShow(true);\n  };\n\n  return (\n    <ModalBox\n      isOpen={open}\n      onClosed={closeModal}\n      position={\"bottom\"}\n      entry={\"bottom\"}\n      style={styles.modal}\n      backButtonClose={true}\n    >\n      <View style={styles.closeButtonView}>\n        <TouchableOpacity style={styles.modalButton} onPress={closeModal}>\n          <AntDesign name=\"close\" size={24} color=\"black\" />\n        </TouchableOpacity>\n      </View>\n      <View style={styles.modalBodyView}>\n        <MyLineChart />\n        <Button onPress={showDatepicker} title=\"Show date picker!\" />\n        {show && (\n          <DateTimePicker\n            testID=\"dateTimePicker\"\n            value={date}\n            mode={\"date\"}\n            is24Hour={true}\n            display=\"default\"\n            onChange={onChange}\n          />\n        )}\n      </View>\n    </ModalBox>\n  );\n}\n\nconst styles = StyleSheet.create({\n  modal: {\n    flex: 1,\n    backgroundColor: \"#FFF\",\n  },\n  closeButtonView: {\n    flex: .5,\n  },\n  modalBodyView: {\n    flex: 9,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  modalButton: {\n    alignSelf: \"flex-end\",\n    marginRight: \"5%\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}