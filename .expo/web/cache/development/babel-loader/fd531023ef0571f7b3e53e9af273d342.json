{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/rknyryn/Desktop/dijidom-mobile-app/screens/HomeScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Item from \"../components/Item\";\nimport DetailsModal from \"../components/DetailsModal\";\nimport { GetAllMeasurementDateByPlantID, GetLastMeasurement } from \"../api/Requests\";\nexport default function HomeScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      measurements = _useState2[0],\n      setMeasurements = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      measurementsDate = _useState4[0],\n      setMeasurementsDate = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalOpen = _useState6[0],\n      setModalOpen = _useState6[1];\n\n  var openModal = function openModal() {\n    return setModalOpen(true);\n  };\n\n  var closeModal = function closeModal() {\n    return setModalOpen(false);\n  };\n\n  useEffect(function () {\n    var unsubscribe = navigation.addListener(\"focus\", function () {\n      GetLastMeasurement().then(function (result) {\n        return setMeasurements(result);\n      });\n    });\n    return unsubscribe;\n  }, [navigation]);\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    style: {\n      flex: 1\n    },\n    data: measurements,\n    keyExtractor: function keyExtractor(item) {\n      return item.plantID.toString();\n    },\n    contentContainerStyle: {\n      padding: 30\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          GetAllMeasurementDateByPlantID(item.plantID, \"2021-09-20\").then(function (result) {\n            setMeasurementsDate(result);\n            openModal();\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }\n      }, React.createElement(Item, {\n        data: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), React.createElement(DetailsModal, {\n    open: modalOpen,\n    closeModal: closeModal,\n    datas: measurementsDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/home/rknyryn/Desktop/dijidom-mobile-app/screens/HomeScreen.js"],"names":["React","useState","useEffect","Item","DetailsModal","GetAllMeasurementDateByPlantID","GetLastMeasurement","HomeScreen","navigation","measurements","setMeasurements","measurementsDate","setMeasurementsDate","modalOpen","setModalOpen","openModal","closeModal","unsubscribe","addListener","then","result","styles","container","width","height","flex","item","plantID","toString","padding","StyleSheet","create"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;AAQA,OAAOC,IAAP;AACA,OAAOC,YAAP;AACA,SACEC,8BADF,EAEEC,kBAFF;AAKA,eAAe,SAASC,UAAT,OAAoC;AAAA;;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AACjD,kBAAwCP,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOQ,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAAgDT,QAAQ,CAAC,EAAD,CAAxD;AAAA;AAAA,MAAOU,gBAAP;AAAA,MAAyBC,mBAAzB;;AACA,mBAAkCX,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOY,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,WAAMD,YAAY,CAAC,IAAD,CAAlB;AAAA,GAAlB;;AACA,MAAME,UAAU,GAAG,SAAbA,UAAa;AAAA,WAAMF,YAAY,CAAC,KAAD,CAAlB;AAAA,GAAnB;;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMe,WAAW,GAAGT,UAAU,CAACU,WAAX,CAAuB,OAAvB,EAAgC,YAAM;AACxDZ,MAAAA,kBAAkB,GAAGa,IAArB,CAA0B,UAACC,MAAD;AAAA,eAAYV,eAAe,CAACU,MAAD,CAA3B;AAAA,OAA1B;AACD,KAFmB,CAApB;AAIA,WAAOH,WAAP;AACD,GANQ,EAMN,CAACT,UAAD,CANM,CAAT;AAQA,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEa,MAAM,CAACC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADT;AAEE,IAAA,IAAI,EAAEhB,YAFR;AAGE,IAAA,YAAY,EAAE,sBAACiB,IAAD;AAAA,aAAUA,IAAI,CAACC,OAAL,CAAaC,QAAb,EAAV;AAAA,KAHhB;AAIE,IAAA,qBAAqB,EAAE;AACrBC,MAAAA,OAAO,EAAE;AADY,KAJzB;AAOE,IAAA,UAAU,EAAE,2BAAc;AAAA,UAAXH,IAAW,SAAXA,IAAW;AACxB,aACE,oBAAC,gBAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACbrB,UAAAA,8BAA8B,CAACqB,IAAI,CAACC,OAAN,EAAe,YAAf,CAA9B,CAA2DR,IAA3D,CAAgE,UAACC,MAAD,EAAY;AAC1ER,YAAAA,mBAAmB,CAACQ,MAAD,CAAnB;AACAL,YAAAA,SAAS;AACV,WAHD;AAID,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEW,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF;AAYD,KApBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAuBE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAEb,SADR;AAEE,IAAA,UAAU,EAAEG,UAFd;AAGE,IAAA,KAAK,EAAEL,gBAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,CADF,CADF;AAiCD;AAED,IAAMU,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE;AADG;AADoB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  TouchableOpacity,\n  SafeAreaView,\n  FlatList,\n  View,\n} from \"react-native\";\nimport Item from \"../components/Item\";\nimport DetailsModal from \"../components/DetailsModal\";\nimport {\n  GetAllMeasurementDateByPlantID,\n  GetLastMeasurement,\n} from \"../api/Requests\";\n\nexport default function HomeScreen({ navigation }) {\n  const [measurements, setMeasurements] = useState([]);\n  const [measurementsDate, setMeasurementsDate] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const openModal = () => setModalOpen(true);\n  const closeModal = () => setModalOpen(false);\n\n  useEffect(() => {\n    const unsubscribe = navigation.addListener(\"focus\", () => {\n      GetLastMeasurement().then((result) => setMeasurements(result));\n    });\n\n    return unsubscribe;\n  }, [navigation]);\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={{ width: \"100%\", height: \"100%\" }}>\n        <FlatList\n          style={{ flex: 1 }}\n          data={measurements}\n          keyExtractor={(item) => item.plantID.toString()}\n          contentContainerStyle={{\n            padding: 30,\n          }}\n          renderItem={({ item }) => {\n            return (\n              <TouchableOpacity\n                onPress={() => {\n                  GetAllMeasurementDateByPlantID(item.plantID, \"2021-09-20\").then((result) => {\n                    setMeasurementsDate(result);\n                    openModal();\n                  });\n                }}\n              >\n                <Item data={item} />\n              </TouchableOpacity>\n            );\n          }}\n        />\n        <DetailsModal\n          open={modalOpen}\n          closeModal={closeModal}\n          datas={measurementsDate}\n        />\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}